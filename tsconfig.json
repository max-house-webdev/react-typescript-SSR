{
  "extends": "./tsconfig.jest.json",
  "compilerOptions": {
    "target": "es6" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "jsx": "react" /* Specify what JSX code is generated. */,
    // "module": "commonjs" /* Specify what module code is generated. */,
    "module": "ESNext",
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "typeRoots": [
      "./types",
      "node_modules/@types"
    ] /* Specify type package names to be included without being referenced in a source file. */,
    "resolveJsonModule": true /* Enable importing .json files */,
    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
    "noEmit": true /* Disable emitting files from a compilation. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitThis": true /* Enable error reporting when `this` is given the type `any`. */,
    "noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },

  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },

  "include": [
    "**/*.spec.ts",
    "**/*.spec.tsx",
    "**/*.test.ts",
    "**/*.test.tsx",
    "**/*.tsx",
    "**/*.d.ts"
  ],
  "exclude": ["node_modules"]
}
